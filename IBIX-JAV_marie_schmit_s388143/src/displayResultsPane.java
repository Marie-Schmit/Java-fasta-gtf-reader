
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
/**
 *
 * @author marie
 */
public class displayResultsPane extends javax.swing.JPanel {

    /**
     * Creates new form displayResultsPane
     */

    public displayResultsPane() {
        initComponents();
        presentPage = 0;
        
        //No nested panel visible at opening
        buttonsPanel.setVisible(false); //Panel containing the buttons for page management when file content is displayed
        exonsPane.setVisible(false);
        tabPanel.setVisible(false); //Panel containing the table of gtf files
        textPanel.setVisible(false);
    }
    
    //Present page
    private int presentPage;
    //Maximum number of pages
    private int maxPages;
    //Display should be text or table
    private boolean text;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        textPanel = new javax.swing.JPanel();
        textArea = new java.awt.TextArea();
        tabPanel = new javax.swing.JPanel();
        gtfTable = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        exonsPane = new javax.swing.JPanel();
        exonsPanel = new exonsPanel();
        buttonsPanel = new javax.swing.JPanel();
        nextBtn = new javax.swing.JButton();
        previousBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        goToPageField = new javax.swing.JTextField();
        goBtn = new javax.swing.JButton();
        pageNumberLbl = new javax.swing.JLabel();

        jScrollPane1.setViewportView(jTextPane1);

        setPreferredSize(new java.awt.Dimension(900, 400));

        textArea.setBackground(new java.awt.Color(240, 240, 240));
        textArea.setEditable(false);
        textArea.setName(""); // NOI18N

        javax.swing.GroupLayout textPanelLayout = new javax.swing.GroupLayout(textPanel);
        textPanel.setLayout(textPanelLayout);
        textPanelLayout.setHorizontalGroup(
            textPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(textArea, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        textPanelLayout.setVerticalGroup(
            textPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(textArea, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
        );

        gtfTable.setFocusable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(

            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Sequence name", "Source", "Feature", "Start", "End", "Score", "Strand", "Frame", "Attribute"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        gtfTable.setViewportView(jTable1);

        javax.swing.GroupLayout tabPanelLayout = new javax.swing.GroupLayout(tabPanel);
        tabPanel.setLayout(tabPanelLayout);
        tabPanelLayout.setHorizontalGroup(
            tabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gtfTable, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        tabPanelLayout.setVerticalGroup(
            tabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gtfTable, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout exonsPaneLayout = new javax.swing.GroupLayout(exonsPane);
        exonsPane.setLayout(exonsPaneLayout);
        exonsPaneLayout.setHorizontalGroup(
            exonsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(exonsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(exonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE))
        );
        exonsPaneLayout.setVerticalGroup(
            exonsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 405, Short.MAX_VALUE)
            .addGroup(exonsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(exonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE))
        );

        jLayeredPane1.setLayer(textPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(tabPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(exonsPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(tabPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(textPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(exonsPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 405, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(tabPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(textPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(exonsPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        nextBtn.setText("Next page");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        previousBtn.setText("Previous page");
        previousBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Go to page: ");
        jLabel1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        goBtn.setText("Go");
        goBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(buttonsPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pageNumberLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(126, 126, 126)
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(goToPageField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(goBtn)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 260, Short.MAX_VALUE)
                    .addComponent(previousBtn)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(nextBtn)
                    .addContainerGap()))
        );
        buttonsPanelLayout.setVerticalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(buttonsPanelLayout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nextBtn)
                            .addComponent(previousBtn)
                            .addComponent(goToPageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(goBtn))
                        .addComponent(pageNumberLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
            .addComponent(buttonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        buttonsPanel.getAccessibleContext().setAccessibleParent(null);
    }// </editor-fold>//GEN-END:initComponents

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        //Increment present page number
        presentPage++;
        //Previous button is visible
        setPreviousBtnVisible(true);

        //Display text on text area, presentPage
        displayText(mainFrame.fileChooserPanel.getFileContent(), presentPage, text);
        //Buttons visibility
        nextPreviousBtnVisible();
    }//GEN-LAST:event_nextBtnActionPerformed

    private void previousBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousBtnActionPerformed
        //Decremente present page number
        presentPage--;

        //Display text on text area, presentPage
        displayText(mainFrame.fileChooserPanel.getFileContent(), presentPage, text);
        //Change buttons visibility
        nextPreviousBtnVisible();
    }//GEN-LAST:event_previousBtnActionPerformed

    private void goBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBtnActionPerformed
        int pageNumber = Integer.parseInt(goToPageField.getText()); //Desired page

        //If entered page does not correspond
        if ((pageNumber < 0) || (pageNumber > maxPages)) {
            displayText("Number of pages must be contained between 0 and " + maxPages + ". Please retry.");
        } else {
            //New current page
            presentPage = Integer.parseInt(goToPageField.getText());

            //Change buttons visibility
            nextPreviousBtnVisible();

            //Display text
            displayText(mainFrame.fileChooserPanel.getFileContent(), presentPage, text);
        }
    }//GEN-LAST:event_goBtnActionPerformed

    private void jLabel1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1AncestorAdded


    //Display text stored in StringBuffer, in an ArrayList in text area, one page at a time
    public void displayText(ArrayList<StringBuffer> textContent, int pageNumber, boolean textType) {
        int startLine;
        int endLine;
        
        text = textType;

        maxPages = maxNumberPages(textContent);

        //Set page number
        pageNumberLbl.setText("Page " + pageNumber + "/" + maxPages);

        //Reset text area
        textArea.setText(null);

        //Set end and start lines for ta page
        startLine = 1000 * pageNumber;
        endLine = startLine + 1000;

        //End line cannot be higher than maximum number of lines
        if (endLine >= textContent.size()) {
            endLine = textContent.size();
        }
        
        //Dislay text
        if(textType){
            //Display lines in this interval
            displayPage(textContent, startLine, endLine);
        }
        //Display table
        else{
            displayTablePage(textContent, startLine, endLine);
        }
    }

    //Override displayText method, to display strings
    public void displayText(String textContent) {
        //Reset text area
        textArea.setText("");

        //Add new string to text area
        textArea.append(textContent);
    }

    //Display text on a page page of text (1000 lines)
    private void displayPage(ArrayList<StringBuffer> textContent, int startLine, int endLine) {
        int i;
        //Clear text area for new page
        textArea.setText(null);
        
        for (i = startLine; i < endLine; i++) {
            textArea.append(textContent.get(i).toString() + "\n");
        }
    }
    
    //Display table on a page
    private void displayTablePage(ArrayList<StringBuffer> textContent, int startLine, int endLine){
        int i;
        //Clear table for new page
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        tableModel.setRowCount(0);
        
        //Starts at line 6 because first 5 lines of the file are not gene models
        for (i = startLine + 6; i < endLine; i++) {
            String[] row;
            //Each line of the gtf file is converted to a table row
            row = contentToString(textContent.get(i));
            addToTable(row);
        }
    }
    
    //Convert a string buffer to a row of table
    private String[] contentToString(StringBuffer rowContent) {
        String rowText = rowContent.toString();
        String[] row;

        //Cells of a row are separated by a tab: separate the row text by tabs
        row = rowText.split("\t");

        return row;
    }

    //Add line to table, for gtf file
    private void addToTable(String[] row) {
        int i;

        //Set default table of jTable1
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        tableModel.addRow(row);
        //Resize col 8 (attributes) of table
        setColSize(jTable1, 8);
    }

    //Resize colulumn of index colNumber of JTable table
    private void setColSize(JTable table, int colNumber) {
        TableColumn tableCol = table.getColumnModel().getColumn(colNumber); //get desired column

        //Set initial width
        int bestWidth = tableCol.getMinWidth();

        //For each row
        int i;
        for (i = 0; i < table.getRowCount(); i++) {
            //Get component used to draw the cell
            TableCellRenderer render = table.getCellRenderer(i, colNumber);
            //Prepare the renderer of a cell
            Component component = table.prepareRenderer(render, i, colNumber);
            int width;
            //Calculate width
            width = component.getPreferredSize().width + table.getIntercellSpacing().width; //New width is based on preferred width and space of cells
            //The width of the column is the maximal width of all rows
            bestWidth = Math.max(bestWidth, width); //Keep maximal width, i)
        }

        tableCol.setPreferredWidth(bestWidth);
    }

    //Get maximal number of pages
    public int maxNumberPages(ArrayList<StringBuffer> textContent) {
        int maxNumber;

        //Calculate maximum page number
        maxNumber = textContent.size() / 1000;

        //Last lines on last page
        if (maxNumber % 1000 != 0) {
            maxNumber++;
        }
        return maxNumber;
    }

    //Set next and previous buttons visibility
    private void nextPreviousBtnVisible() {
        //If maximal number of page attained
        if (presentPage + 1 >= maxPages) {
            nextBtn.setVisible(false);
        } else {
            nextBtn.setVisible(true);
        }
        //Set previous button to visible when page number is more than 0
        if (presentPage > 0) {
            previousBtn.setVisible(true);
        } //Set previous button to unvisible
        else {
            previousBtn.setVisible(false);
        }
    }
    
    //Reset text and table area
    public void resetText(){
        displayText(null);
    }

    //Set next button to visible or invisible
    public void setNextBtnVisible(boolean visibility) {
        nextBtn.setVisible(visibility);
    }

    //Set previous button to visible or invisible
    public void setPreviousBtnVisible(boolean visibility) {
        previousBtn.setVisible(visibility);
    }

    //Set page number
    public void setPageNumber(int newNumber) {
        presentPage = newNumber;
    }
    
    //Set one panel visible if the result is text
    public void setPanelVisible(boolean text, boolean table, boolean buttons, boolean exons){  
        buttonsPanel.setVisible(buttons); //Panel containing the buttons for page management when file content is displayed
        //Panel exon opens on file chosing
        if (exons)
                exonsPanel.fileChoiceVisibility(true);
        
        exonsPane.setVisible(exons);
        tabPanel.setVisible(table); //Panel containing the table of gtf files
        textPanel.setVisible(text); //Panel containing the text content of java files
    }
    
    //Change sze of font text in text area
    public void setFontTextArea(float newSize){
        textArea.setFont(textArea.getFont().deriveFont(newSize));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JPanel exonsPane;
    public exonsPanel exonsPanel;
    private javax.swing.JButton goBtn;
    private javax.swing.JTextField goToPageField;
    private javax.swing.JScrollPane gtfTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JButton nextBtn;
    private javax.swing.JLabel pageNumberLbl;
    private javax.swing.JButton previousBtn;
    public static javax.swing.JPanel tabPanel;
    private java.awt.TextArea textArea;
    public static javax.swing.JPanel textPanel;
    // End of variables declaration//GEN-END:variables
}
