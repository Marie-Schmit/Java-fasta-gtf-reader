/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author marie
 */
import java.awt.Graphics;
import java.awt.Color;
import java.awt.Dimension;
import java.util.ArrayList;


public class graphicExons extends javax.swing.JPanel{

    /**
     * Creates new form graphicExons
     */
    public graphicExons() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 964, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 473, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    //Create instance of class exons
    private exons classExons = new exons();
    private int[][] coordinates;
    
    
    
    //Override paint component
    @Override
    public void paintComponent(Graphics g){
        super.paintComponent(g);
        Color exonColor = new Color(255, 127, 80);
        //Set color and rectangles
        g.setColor(exonColor);
        
        //New instance of exons to call function that gives rectangles coordinates
        exons exons = new exons();
        //Array list with the coordinates of each sequence
        ArrayList<int[]> allCoordinates = new ArrayList<int[]>();
        allCoordinates = exons.exonsGraphical(coordinates, this.getSize().height, this.getSize().width);
        
        //For every set of coordinate, draw a ractangle
        for(int i= 0; i < allCoordinates.size(); i++){
            int[] rectDimensions = allCoordinates.get(i);
            
            //Fill rectangle
            g.fillRect(rectDimensions[0], rectDimensions[1], rectDimensions[2], rectDimensions[3]);
            
        }
        
        //Adapt dimensions of the panel
        setPreferredSize(new Dimension(2500,getHeight()));
        
    }
    
    public void setCoordinates(int[][] newCoordinates){
        coordinates = newCoordinates;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
